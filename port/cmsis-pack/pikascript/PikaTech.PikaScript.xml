<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.7.28" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.28/schema/PACK.xsd">
  <vendor>PikaTech</vendor>
  <name>PikaScript</name>
  <description>PikaScript is an ultra-lightweight Python engine with zero dependencies and zero-configuration, that can run with 4KB of RAM and 32KB of flash. It's very easy to bind C function to python module with the help of Pika Pre-compiler.Only write the API of python in .pyi and the bindings are autoly generated by Pre-compiler.</description>
  <url>https://gitee.com/Lyon1998/pikascript/raw/master/port/cmsis-pack/</url>
  <supportContact>https://github.com/pikasTech/pikascript/issues</supportContact>
  <license>LICENSE</license>
  <!-- optional license file -->
  <!-- 
  <license>
  </license>
  -->

  <repository type="git">https://github.com/pikasTech/pikascript.git</repository>

  <releases>
    <release date="@DATE" version="@VERSION" tag="@VERSION">
        - PikaScript v@VERSION
    </release>

  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>Python</keyword>
    <keyword>MCU</keyword>
  </keywords>

  <conditions>
    <condition id="Arm Compiler">
      <description>Arm Compiler 5 (armcc) or Arm Compiler 6 (armclang).</description>
      <accept Tcompiler="ARMCC" Toptions="AC6" />
      <accept Tcompiler="ARMCC" Toptions="AC6LTO" />
      <accept Tcompiler="ARMCC" Toptions="AC5" />
    </condition>
    <condition id="Arm GCC">
      <description>GNU Tools for Arm Embedded Processors.</description>
      <accept Tcompiler="GCC" />
    </condition>
    <condition id="Cortex-M Processors">
      <description>Support All Cortex-M based processors</description>
      <accept Dcore="Cortex-M0" />
      <accept Dcore="Cortex-M0+" />
      <accept Dcore="Cortex-M1" />
      <accept Dcore="Cortex-M3" />
      <accept Dcore="Cortex-M4" />
      <accept Dcore="Cortex-M7" />
      <accept Dcore="Cortex-M23" />
      <accept Dcore="Cortex-M33" />
      <accept Dcore="Cortex-M35P" />
      <accept Dcore="Cortex-M55" />
      <accept Dcore="Cortex-M85" />
      <accept Dcore="Star-MC1" />
      <accept Dcore="SC000" />
      <accept Dcore="SC300" />
      <accept Dcore="ARMV8MBL" />
      <accept Dcore="ARMV8MML" />
      <accept Dcore="ARMV81MML" />
    </condition>

    <condition id="CMSIS-CORE">
      <description>Require CMSIS-CORE Support</description>
      <require Cclass="CMSIS" Cgroup="CORE" />
    </condition>

    <condition id="Cortex-M Arm GCC">
      <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
      <require condition="Arm GCC" />
      <require condition="Cortex-M Processors" />
    </condition>
    <condition id="Cortex-M Arm Compiler">
      <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
      <require condition="Arm Compiler" />
      <require condition="Cortex-M Processors" />
    </condition>

    <condition id="Cortex-M Arm GCC CMSIS-CORE">
      <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
      <require condition="Arm GCC" />
      <require condition="Cortex-M Processors" />
      <require condition="CMSIS-CORE" />
    </condition>
    <condition id="Cortex-M Arm Compiler CMSIS-CORE">
      <description>Compile Cortex-M Processors with GNU Tools for Arm Embedded Processors.</description>
      <require condition="Arm Compiler" />
      <require condition="Cortex-M Processors" />
      <require condition="CMSIS-CORE" />
    </condition>

    <condition id="Kernel">
      <description>The Kernel of the PikaScript</description>
      <require Cclass="PikaScript" Cgroup="PikaScript" Csub="Core" Cversion="@VERSION" />
    </condition>

    <condition id="NO_LVGL_Pack">
      <description>The existance of the LVGL</description>
      <deny Cclass="LVGL" Cgroup="lvgl" Csub="PikaScript Binding" Cversion="0.2.0" />
      <require condition="Kernel" />
    </condition>

    <condition id="PLOOC_Pack">
      <description>The Kernel of the PikaScript</description>
      <require Cclass="Language Extension" Cgroup="PLOOC" />
    </condition>

    <condition id="NO_PLOOC_Pack">
      <description>The Kernel of the PikaScript</description>
      <deny Cclass="Language Extension" Cgroup="PLOOC" />
    </condition>

  </conditions>
  <!-- apis section (optional - for Application Programming Interface descriptions) -->
  <!-- 
  <apis>
  </apis>
  -->

  <!-- boards section (mandatory for Board Support Packs) -->
  <!-- 
  <boards>
  </boards>
  -->

  <!-- devices section (mandatory for Device Family Packs) -->
  <!--
  <devices>
  </devices>
  -->

  <!-- examples section (optional for all Software Packs)-->
  <!--
  <examples>
  </examples>
  -->

  <!-- conditions section (optional for all Software Packs)-->
  <!--
  <conditions>
  </conditions>
  -->

  <components>
    <bundle Cbundle="PikaScript" Cclass="PikaScript" Cversion="@VERSION">
      <description>an ultra-lightweight Python engine</description>
      <doc>https://pikadoc-en.readthedocs.io/en/latest/index.html</doc>

      <component Cgroup="PikaScript" Csub="Core" Cversion="@VERSION">
        <description>PikaScript Kernel</description>
        <files>
@KERNAL
          <file attr="config" category="header" name="__pika_ooc.h" />
          <file category="header" name="PLOOC/plooc_class.h" condition="NO_PLOOC_Pack" />
          <file category="header" name="PLOOC/plooc.h" condition="NO_PLOOC_Pack" />
          <file category="header" name="PLOOC/plooc_class_simple.h" condition="NO_PLOOC_Pack" />
          <file category="header" name="PLOOC/plooc_class_simple_c90.h" condition="NO_PLOOC_Pack" />
          <file category="header" name="PLOOC/plooc_class_strict.h" condition="NO_PLOOC_Pack" />
          <file category="header" name="PLOOC/plooc_class_black_box.h" condition="NO_PLOOC_Pack" />
          <file attr="config" category="utility" name="rust-msc-latest-win10.exe" version="1.0.0" />
          <file attr="config" category="utility" name="pikaPackage.exe" version="1.0.0" />
          <file attr="config" category="utility" name="pikaBeforBuild-keil.bat" version="1.1.0" />
          <file attr="config" category="utility" name="clean.bat" version="1.0.1" />
          <file attr="config" category="source" name="requestment.txt" version="1.1.0" />
          <file attr="config" category="source" name="main.py" />
        </files>
        <RTE_Components_h>
#define RTE_Script_PikaScript
        </RTE_Components_h>
      </component>

      <component Cgroup="PikaScript" Csub="PikaStdLib" Cversion="@VERSION" condition="Kernel">
        <description>The standard library for PikaScript</description>
        <Pre_Include_Local_Component_h>

#include "RTE_Components.h"
#if !((defined(LV_USE_PIKASCRIPT_BINDING) &#38;&#38; LV_USE_PIKASCRIPT_BINDING) ||  (defined(PIKA_USE_LVGL_BINDING) &#38;&#38; PIKA_USE_LVGL_BINDING))
#   define PIKA_MODULE_PIKA_LVGL_DISABLE    1
#endif
        </Pre_Include_Local_Component_h>
        <files>

@LIB
        </files>
      </component>

      <component Cgroup="PikaScript" Csub="pika_lvgl" Cversion="@LVGL_VERSION" condition="Kernel">
        <description>The lvgl module for PikaScript</description>
        <files>
@LVGL_LIB

        </files>
        
        <RTE_Components_h>

/*! \brief enable PikaScrit Binding */
#define PIKA_USE_LVGL_BINDING          1
        </RTE_Components_h>
      </component>

    </bundle>
  </components>

  <!-- optional taxonomy section for defining new component Class and Group names -->
  <!--
  <taxonomy>
  </taxonomy>
  -->

</package>